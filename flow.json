[
    {
        "id": "b85e689907e9fec0",
        "type": "tab",
        "label": "TestBench",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "3e84c5cf3d615558",
        "type": "tab",
        "label": "Outputs",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "14b665ce20ae005d",
        "type": "tab",
        "label": "Inputs",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "49fbf15f.3b175",
        "type": "tab",
        "label": "Flow 1",
        "disabled": true,
        "info": ""
    },
    {
        "id": "1007930ba5f8f5d0",
        "type": "tab",
        "label": "Game",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "250ff9a.803fb06",
        "type": "mqtt-broker",
        "name": "localhost",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "compatmode": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "da452479d1ea07ce",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.20.232",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "66f243fe336ed255",
        "type": "ui_tab",
        "name": "Controller state",
        "icon": "timeline",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "621f4384a7c5e6c1",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Lasermaze TEST Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "true",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "4f1dda1ab9d88666",
        "type": "ui_group",
        "name": "Input controllers",
        "tab": "66f243fe336ed255",
        "order": 1,
        "disp": true,
        "width": 11,
        "collapse": false,
        "className": ""
    },
    {
        "id": "c51fcf6d617cd347",
        "type": "ui_tab",
        "name": "Output controllers",
        "icon": "launch",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "aa53a1fae4f5c3fc",
        "type": "ui_group",
        "name": "[4] 14734117",
        "tab": "c5e7312eaa9cdf8b",
        "order": 1,
        "disp": true,
        "width": 3,
        "collapse": false,
        "className": ""
    },
    {
        "id": "d669fe7b63ed71a3",
        "type": "ui_group",
        "name": "[3] 14733772",
        "tab": "c5e7312eaa9cdf8b",
        "order": 2,
        "disp": true,
        "width": 3,
        "collapse": false,
        "className": ""
    },
    {
        "id": "ef15e01d45b72b31",
        "type": "ui_group",
        "name": "[2] 14769654 control",
        "tab": "c51fcf6d617cd347",
        "order": 2,
        "disp": true,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a3df13cfc39b8a17",
        "type": "ui_group",
        "name": "14769654 state",
        "tab": "c51fcf6d617cd347",
        "order": 4,
        "disp": true,
        "width": "3",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c5e7312eaa9cdf8b",
        "type": "ui_tab",
        "name": "Input controllers",
        "icon": "input",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c651fac8c1487937",
        "type": "ui_group",
        "name": "[1] 14493860 control",
        "tab": "c51fcf6d617cd347",
        "order": 1,
        "disp": true,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8f574078854e0b61",
        "type": "ui_group",
        "name": "[3] 14530877 controller",
        "tab": "c51fcf6d617cd347",
        "order": 3,
        "disp": true,
        "width": 4,
        "collapse": false,
        "className": ""
    },
    {
        "id": "d4b46c88d0dadebe",
        "type": "ui_group",
        "name": "[x] 14771609",
        "tab": "c5e7312eaa9cdf8b",
        "order": 3,
        "disp": true,
        "width": 3,
        "collapse": false,
        "className": ""
    },
    {
        "id": "7eadae5a424708bb",
        "type": "ui_tab",
        "name": "Configure",
        "icon": "settings_backup_restore",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "bab506bef351856a",
        "type": "ui_group",
        "name": "Configure",
        "tab": "7eadae5a424708bb",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b0afb3a53604b191",
        "type": "ui_spacer",
        "z": "1007930ba5f8f5d0",
        "name": "spacer",
        "group": "bab506bef351856a",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "c489d944ca7cafd9",
        "type": "ui_group",
        "name": "Game",
        "tab": "4fa174b828a925c7",
        "order": 2,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "4fa174b828a925c7",
        "type": "ui_tab",
        "name": "Game",
        "icon": "vidiogame_asset",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "dfad14d10a9fab45",
        "type": "inject",
        "z": "b85e689907e9fec0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "6",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 330,
        "y": 120,
        "wires": [
            [
                "2418317a0fde6e8d"
            ]
        ]
    },
    {
        "id": "2418317a0fde6e8d",
        "type": "function",
        "z": "b85e689907e9fec0",
        "name": "14769654",
        "func": "const id = 14769654;\nconst maxPort = 4;\nconst ON = \"1\";\nconst OFF = \"0\";\n\n// memeory template for context\nvar _memoryTemplate = {\n\t\"i\" : 0,\n\t\"state\" : 0x00\n}\n\n// Get context data and set deafult when not existing\nvar memory = flow.get(id.toString());\nif (memory === undefined) //test exists\n{\n  memory = _memoryTemplate;\n}\n\n// MQTT settings\nlet topicBase = \"lasermaze/\" + id.toString() + \"/output/\";\nmsg.qos = 0;\nmsg.retain = false;\n\n// Increment iterator.\nif(memory.i < maxPort){\n    memory.i++;\n}else{\n    memory.i = 0;\n}\n\n// set all outputs at device.\nfor( i = 0; i < maxPort; i++){\n    if(i === memory.i){\n        msg.payload = ON; \n    }else{\n        msg.payload = OFF;\n    }\n    msg.topic = topicBase + i.toString() + \"/\";\n    node.send(msg);\n}\n\n\n// Save context data\nflow.set(id.toString(), memory);\n\n// return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 120,
        "wires": [
            [
                "ac0f859af2c36f08"
            ]
        ]
    },
    {
        "id": "bb74cd760b6d518c",
        "type": "function",
        "z": "b85e689907e9fec0",
        "name": "14493860",
        "func": "const id = 14493860;\nconst maxPort = 4;\nconst ON = \"1\";\nconst OFF = \"0\";\n\n// memeory template for context\nvar _memoryTemplate = {\n\t\"i\" : 0,\n\t\"state\" : 0x00\n}\n\n// Get context data and set deafult when not existing\nvar memory = flow.get(id.toString());\nif (memory === undefined) //test exists\n{\n  memory = _memoryTemplate;\n}\n\n// MQTT settings\nlet topicBase = \"lasermaze/\" + id.toString() + \"/output/\";\nmsg.qos = 0;\nmsg.retain = false;\n\n// Increment iterator.\nif(memory.i < maxPort){\n    memory.i++;\n}else{\n    memory.i = 0;\n}\n\n// set all outputs at device.\nfor( i = 0; i < maxPort; i++){\n    if(i === memory.i){\n        msg.payload = ON; \n    }else{\n        msg.payload = OFF;\n    }\n    msg.topic = topicBase + i.toString() + \"/\";\n    node.send(msg);\n}\n\n\n// Save context data\nflow.set(id.toString(), memory);\n\n// return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 160,
        "wires": [
            [
                "ac0f859af2c36f08"
            ]
        ]
    },
    {
        "id": "ac0f859af2c36f08",
        "type": "mqtt out",
        "z": "b85e689907e9fec0",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "250ff9a.803fb06",
        "x": 710,
        "y": 120,
        "wires": []
    },
    {
        "id": "9dcdfc9bb589e126",
        "type": "inject",
        "z": "b85e689907e9fec0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 330,
        "y": 160,
        "wires": [
            [
                "bb74cd760b6d518c"
            ]
        ]
    },
    {
        "id": "c225cf19e47cc15e",
        "type": "comment",
        "z": "b85e689907e9fec0",
        "name": "4-relay - 1",
        "info": "",
        "x": 160,
        "y": 160,
        "wires": []
    },
    {
        "id": "4d82961d3e1cae14",
        "type": "comment",
        "z": "b85e689907e9fec0",
        "name": "4-relay - 2",
        "info": "",
        "x": 160,
        "y": 120,
        "wires": []
    },
    {
        "id": "e1fbf644e1272946",
        "type": "inject",
        "z": "b85e689907e9fec0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 330,
        "y": 80,
        "wires": [
            [
                "8200541acdb9f1e1"
            ]
        ]
    },
    {
        "id": "8200541acdb9f1e1",
        "type": "function",
        "z": "b85e689907e9fec0",
        "name": "14530877",
        "func": "const id = 14530877;\nconst maxPort = 8;\nconst ON = \"1\";\nconst OFF = \"0\";\n\n// memeory template for context\nvar _memoryTemplate = {\n\t\"i\" : 0,\n\t\"state\" : 0x00\n}\n\n// Get context data and set deafult when not existing\nvar memory = flow.get(id.toString());\nif (memory === undefined) //test exists\n{\n  memory = _memoryTemplate;\n}\n\n// MQTT settings\nlet topicBase = \"lasermaze/\" + id.toString() + \"/output/\";\nmsg.qos = 0;\nmsg.retain = false;\n\n// Increment iterator.\nif(memory.i < maxPort){\n    memory.i++;\n}else{\n    memory.i = 0;\n}\n\n// set all outputs at device.\nfor( i = 0; i < maxPort; i++){\n    if(i === memory.i){\n        msg.payload = ON; \n    }else{\n        msg.payload = OFF;\n    }\n    msg.topic = topicBase + i.toString() + \"/\";\n    node.send(msg);\n}\n\n\n// Save context data\nflow.set(id.toString(), memory);\n\n// return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 80,
        "wires": [
            [
                "ac0f859af2c36f08"
            ]
        ]
    },
    {
        "id": "26aa1648828333c3",
        "type": "comment",
        "z": "b85e689907e9fec0",
        "name": "8-output - 3",
        "info": "",
        "x": 150,
        "y": 80,
        "wires": []
    },
    {
        "id": "179ff4162a99f002",
        "type": "mqtt out",
        "z": "3e84c5cf3d615558",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "250ff9a.803fb06",
        "x": 1070,
        "y": 980,
        "wires": []
    },
    {
        "id": "2b33a8e0e82b32b2",
        "type": "ui_button",
        "z": "3e84c5cf3d615558",
        "name": "14769654 - 0 - ON",
        "group": "ef15e01d45b72b31",
        "order": 1,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "0 - ON",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"state\":\"1\",\"port\":\"0\",\"id\":\"14769654\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 590,
        "y": 360,
        "wires": [
            [
                "64417631ef1db667"
            ]
        ]
    },
    {
        "id": "f27451da0fb6fb20",
        "type": "ui_button",
        "z": "3e84c5cf3d615558",
        "name": "14769654 - 0 - OFF",
        "group": "ef15e01d45b72b31",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "0 - OFF",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"state\":\"0\",\"port\":\"0\",\"id\":\"14769654\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 600,
        "y": 400,
        "wires": [
            [
                "64417631ef1db667"
            ]
        ]
    },
    {
        "id": "64417631ef1db667",
        "type": "function",
        "z": "3e84c5cf3d615558",
        "name": "set port",
        "func": "const maxPort = 4;\nconst ON = \"1\";\nconst OFF = \"0\";\n\n// MQTT settings\nlet topicBase = \nmsg.qos = 0;\nmsg.retain = false;\n\nlet command = msg.payload; \nmsg.topic = \"lasermaze/\" + command.id + \"/output/\" + command.port + \"/\";\nmsg.payload = command.state;\nnode.send(msg);\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 620,
        "wires": [
            [
                "179ff4162a99f002"
            ]
        ]
    },
    {
        "id": "65a512e69c4e583f",
        "type": "ui_button",
        "z": "3e84c5cf3d615558",
        "name": "14769654 - 1 - ON",
        "group": "ef15e01d45b72b31",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "1 - ON",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"state\":\"1\",\"port\":\"1\",\"id\":\"14769654\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 590,
        "y": 440,
        "wires": [
            [
                "64417631ef1db667"
            ]
        ]
    },
    {
        "id": "4db360b4fd2c632e",
        "type": "ui_button",
        "z": "3e84c5cf3d615558",
        "name": "14769654 - 1 - OFF",
        "group": "ef15e01d45b72b31",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "1 - OFF",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"state\":\"0\",\"port\":\"1\",\"id\":\"14769654\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 600,
        "y": 480,
        "wires": [
            [
                "64417631ef1db667"
            ]
        ]
    },
    {
        "id": "b1132ba4ef6e1271",
        "type": "ui_button",
        "z": "3e84c5cf3d615558",
        "name": "14769654 - 2 - ON",
        "group": "ef15e01d45b72b31",
        "order": 5,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "2 - ON",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"state\":\"1\",\"port\":\"2\",\"id\":\"14769654\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 590,
        "y": 520,
        "wires": [
            [
                "64417631ef1db667"
            ]
        ]
    },
    {
        "id": "cd92c68dec73a718",
        "type": "ui_button",
        "z": "3e84c5cf3d615558",
        "name": "14769654 - 2 - OFF",
        "group": "ef15e01d45b72b31",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "2 - OFF",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"state\":\"0\",\"port\":\"2\",\"id\":\"14769654\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 600,
        "y": 560,
        "wires": [
            [
                "64417631ef1db667"
            ]
        ]
    },
    {
        "id": "98342fb2dfc9ceab",
        "type": "ui_button",
        "z": "3e84c5cf3d615558",
        "name": "14769654 - 3 - ON",
        "group": "ef15e01d45b72b31",
        "order": 7,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "3 - ON",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"state\":\"1\",\"port\":\"3\",\"id\":\"14769654\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 590,
        "y": 600,
        "wires": [
            [
                "64417631ef1db667"
            ]
        ]
    },
    {
        "id": "2c35143dd1bd29c4",
        "type": "ui_button",
        "z": "3e84c5cf3d615558",
        "name": "14769654 - 3 - OFF",
        "group": "ef15e01d45b72b31",
        "order": 8,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "3 - OFF",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"state\":\"0\",\"port\":\"3\",\"id\":\"14769654\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 600,
        "y": 640,
        "wires": [
            [
                "64417631ef1db667"
            ]
        ]
    },
    {
        "id": "cf44632ef64a88b5",
        "type": "ui_button",
        "z": "3e84c5cf3d615558",
        "name": "14493860 - 0 - ON",
        "group": "c651fac8c1487937",
        "order": 1,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "0 - ON",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"state\":\"1\",\"port\":\"0\",\"id\":\"14493860\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 590,
        "y": 700,
        "wires": [
            [
                "64417631ef1db667"
            ]
        ]
    },
    {
        "id": "127530108e33bf40",
        "type": "ui_button",
        "z": "3e84c5cf3d615558",
        "name": "14493860 - 0 - OFF",
        "group": "c651fac8c1487937",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "0 - OFF",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"state\":\"0\",\"port\":\"0\",\"id\":\"14493860\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 600,
        "y": 740,
        "wires": [
            [
                "64417631ef1db667"
            ]
        ]
    },
    {
        "id": "57b6751c7d85d927",
        "type": "ui_button",
        "z": "3e84c5cf3d615558",
        "name": "14493860 - 1 - ON",
        "group": "c651fac8c1487937",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "1 - ON",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"state\":\"1\",\"port\":\"1\",\"id\":\"14493860\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 590,
        "y": 780,
        "wires": [
            [
                "64417631ef1db667"
            ]
        ]
    },
    {
        "id": "e7b64e174e627407",
        "type": "ui_button",
        "z": "3e84c5cf3d615558",
        "name": "14493860 - 1 - OFF",
        "group": "c651fac8c1487937",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "1 - OFF",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"state\":\"0\",\"port\":\"1\",\"id\":\"14493860\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 600,
        "y": 820,
        "wires": [
            [
                "64417631ef1db667"
            ]
        ]
    },
    {
        "id": "95b10b21856e5aa4",
        "type": "ui_button",
        "z": "3e84c5cf3d615558",
        "name": "14493860 - 2 - ON",
        "group": "c651fac8c1487937",
        "order": 5,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "2 - ON",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"state\":\"1\",\"port\":\"2\",\"id\":\"14493860\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 590,
        "y": 860,
        "wires": [
            [
                "64417631ef1db667"
            ]
        ]
    },
    {
        "id": "674ead3a9bf8470b",
        "type": "ui_button",
        "z": "3e84c5cf3d615558",
        "name": "14493860 - 2 - OFF",
        "group": "c651fac8c1487937",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "2 - OFF",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"state\":\"0\",\"port\":\"2\",\"id\":\"14493860\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 600,
        "y": 900,
        "wires": [
            [
                "64417631ef1db667"
            ]
        ]
    },
    {
        "id": "b75d9721ed3e5491",
        "type": "ui_button",
        "z": "3e84c5cf3d615558",
        "name": "14493860 - 3 - ON",
        "group": "c651fac8c1487937",
        "order": 7,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "3 - ON",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"state\":\"1\",\"port\":\"3\",\"id\":\"14493860\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 590,
        "y": 940,
        "wires": [
            [
                "64417631ef1db667"
            ]
        ]
    },
    {
        "id": "8a0ef70c29f69a0f",
        "type": "ui_button",
        "z": "3e84c5cf3d615558",
        "name": "14493860 - 3 - OFF",
        "group": "c651fac8c1487937",
        "order": 8,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "3 - OFF",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"state\":\"0\",\"port\":\"3\",\"id\":\"14493860\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 600,
        "y": 980,
        "wires": [
            [
                "64417631ef1db667"
            ]
        ]
    },
    {
        "id": "6366b9f7099b2504",
        "type": "function",
        "z": "3e84c5cf3d615558",
        "name": "14769654",
        "func": "const id = 14769654;\n\nlet mqttTopic = msg.topic;\nlet topics = mqttTopic.split('/');\n\nif(topics[1].toString() === id.toString()){\n    msg.device = topics[1];\n    msg.port = topics[3];\n    node.send(msg);\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 180,
        "wires": [
            [
                "938183fecbd6c72a"
            ]
        ]
    },
    {
        "id": "938183fecbd6c72a",
        "type": "switch",
        "z": "3e84c5cf3d615558",
        "name": "",
        "property": "port",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 170,
        "y": 500,
        "wires": [
            [
                "db738f6988c32b6a"
            ],
            [
                "a3ce4074bcc7da27"
            ],
            [
                "dd7b3ba3abf62246"
            ],
            [
                "1bc2e6b211cb7df7"
            ],
            []
        ]
    },
    {
        "id": "db738f6988c32b6a",
        "type": "function",
        "z": "3e84c5cf3d615558",
        "name": "",
        "func": "var msgOn = {};\nvar msgOff = {};\n\nif(msg.payload === \"0\"){\n    // disable off button\n    msgOff.enabled = false;\n    msgOn.enabled = true;\n}else{\n    // disable on button\n    msgOff.enabled = true;\n    msgOn.enabled = false;\n}\nnode.send([[msgOn],[msgOff]]);\n\n// return msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 440,
        "wires": [
            [
                "2b33a8e0e82b32b2"
            ],
            [
                "f27451da0fb6fb20"
            ]
        ]
    },
    {
        "id": "a3ce4074bcc7da27",
        "type": "function",
        "z": "3e84c5cf3d615558",
        "name": "",
        "func": "var msgOn = {};\nvar msgOff = {};\n\nif(msg.payload === \"0\"){\n    // disable off button\n    msgOff.enabled = false;\n    msgOn.enabled = true;\n}else{\n    // disable on button\n    msgOff.enabled = true;\n    msgOn.enabled = false;\n}\nnode.send([[msgOn],[msgOff]]);\n\n// return msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 480,
        "wires": [
            [
                "65a512e69c4e583f"
            ],
            [
                "4db360b4fd2c632e"
            ]
        ]
    },
    {
        "id": "dd7b3ba3abf62246",
        "type": "function",
        "z": "3e84c5cf3d615558",
        "name": "",
        "func": "var msgOn = {};\nvar msgOff = {};\n\nif(msg.payload === \"0\"){\n    // disable off button\n    msgOff.enabled = false;\n    msgOn.enabled = true;\n}else{\n    // disable on button\n    msgOff.enabled = true;\n    msgOn.enabled = false;\n}\nnode.send([[msgOn],[msgOff]]);\n\n// return msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 520,
        "wires": [
            [
                "b1132ba4ef6e1271"
            ],
            [
                "cd92c68dec73a718"
            ]
        ]
    },
    {
        "id": "1bc2e6b211cb7df7",
        "type": "function",
        "z": "3e84c5cf3d615558",
        "name": "",
        "func": "var msgOn = {};\nvar msgOff = {};\n\nif(msg.payload === \"0\"){\n    // disable off button\n    msgOff.enabled = false;\n    msgOn.enabled = true;\n}else{\n    // disable on button\n    msgOff.enabled = true;\n    msgOn.enabled = false;\n}\nnode.send([[msgOn],[msgOff]]);\n\n// return msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 560,
        "wires": [
            [
                "98342fb2dfc9ceab"
            ],
            [
                "2c35143dd1bd29c4"
            ]
        ]
    },
    {
        "id": "f527869152666abd",
        "type": "function",
        "z": "3e84c5cf3d615558",
        "name": "14493860",
        "func": "const id = 14493860;\n\nlet mqttTopic = msg.topic;\nlet topics = mqttTopic.split('/');\n\nif(topics[1].toString() === id.toString()){\n    msg.device = topics[1];\n    msg.port = topics[3];\n    node.send(msg);\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 220,
        "wires": [
            [
                "4ade8d8944341686"
            ]
        ]
    },
    {
        "id": "4ade8d8944341686",
        "type": "switch",
        "z": "3e84c5cf3d615558",
        "name": "",
        "property": "port",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 170,
        "y": 840,
        "wires": [
            [
                "bcb42c1f54b73039"
            ],
            [
                "7dcc61674f928935"
            ],
            [
                "5ae28659b624bcbd"
            ],
            [
                "fe21c90985f8832f"
            ],
            []
        ]
    },
    {
        "id": "bcb42c1f54b73039",
        "type": "function",
        "z": "3e84c5cf3d615558",
        "name": "",
        "func": "var msgOn = {};\nvar msgOff = {};\n\nif(msg.payload === \"0\"){\n    // disable off button\n    msgOff.enabled = false;\n    msgOn.enabled = true;\n}else{\n    // disable on button\n    msgOff.enabled = true;\n    msgOn.enabled = false;\n}\nnode.send([[msgOn],[msgOff]]);\n\n// return msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 780,
        "wires": [
            [
                "cf44632ef64a88b5"
            ],
            [
                "127530108e33bf40"
            ]
        ]
    },
    {
        "id": "7dcc61674f928935",
        "type": "function",
        "z": "3e84c5cf3d615558",
        "name": "",
        "func": "var msgOn = {};\nvar msgOff = {};\n\nif(msg.payload === \"0\"){\n    // disable off button\n    msgOff.enabled = false;\n    msgOn.enabled = true;\n}else{\n    // disable on button\n    msgOff.enabled = true;\n    msgOn.enabled = false;\n}\nnode.send([[msgOn],[msgOff]]);\n\n// return msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 820,
        "wires": [
            [
                "57b6751c7d85d927"
            ],
            [
                "e7b64e174e627407"
            ]
        ]
    },
    {
        "id": "5ae28659b624bcbd",
        "type": "function",
        "z": "3e84c5cf3d615558",
        "name": "",
        "func": "var msgOn = {};\nvar msgOff = {};\n\nif(msg.payload === \"0\"){\n    // disable off button\n    msgOff.enabled = false;\n    msgOn.enabled = true;\n}else{\n    // disable on button\n    msgOff.enabled = true;\n    msgOn.enabled = false;\n}\nnode.send([[msgOn],[msgOff]]);\n\n// return msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 860,
        "wires": [
            [
                "95b10b21856e5aa4"
            ],
            [
                "674ead3a9bf8470b"
            ]
        ]
    },
    {
        "id": "fe21c90985f8832f",
        "type": "function",
        "z": "3e84c5cf3d615558",
        "name": "",
        "func": "var msgOn = {};\nvar msgOff = {};\n\nif(msg.payload === \"0\"){\n    // disable off button\n    msgOff.enabled = false;\n    msgOn.enabled = true;\n}else{\n    // disable on button\n    msgOff.enabled = true;\n    msgOn.enabled = false;\n}\nnode.send([[msgOn],[msgOff]]);\n\n// return msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 900,
        "wires": [
            [
                "b75d9721ed3e5491"
            ],
            [
                "8a0ef70c29f69a0f"
            ]
        ]
    },
    {
        "id": "e652067f921821a7",
        "type": "ui_button",
        "z": "3e84c5cf3d615558",
        "name": "14530877 - 0 - ON",
        "group": "8f574078854e0b61",
        "order": 1,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "0 - ON",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"state\":\"1\",\"port\":\"0\",\"id\":\"14530877\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 590,
        "y": 1040,
        "wires": [
            [
                "de8bd57756400535"
            ]
        ]
    },
    {
        "id": "d219fb45573d547f",
        "type": "ui_button",
        "z": "3e84c5cf3d615558",
        "name": "14530877 - 0 - OFF",
        "group": "8f574078854e0b61",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "0 - OFF",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"state\":\"0\",\"port\":\"0\",\"id\":\"14530877\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 600,
        "y": 1080,
        "wires": [
            [
                "de8bd57756400535"
            ]
        ]
    },
    {
        "id": "fcccb6d1c053b19c",
        "type": "ui_button",
        "z": "3e84c5cf3d615558",
        "name": "14530877 - 1 - ON",
        "group": "8f574078854e0b61",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "1 - ON",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"state\":\"1\",\"port\":\"1\",\"id\":\"14530877\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 590,
        "y": 1120,
        "wires": [
            [
                "de8bd57756400535"
            ]
        ]
    },
    {
        "id": "a30232e05571c13c",
        "type": "ui_button",
        "z": "3e84c5cf3d615558",
        "name": "14530877 - 1 - OFF",
        "group": "8f574078854e0b61",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "1 - OFF",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"state\":\"0\",\"port\":\"1\",\"id\":\"14530877\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 600,
        "y": 1160,
        "wires": [
            [
                "de8bd57756400535"
            ]
        ]
    },
    {
        "id": "93f4dc590c330dbc",
        "type": "ui_button",
        "z": "3e84c5cf3d615558",
        "name": "14530877 - 2 - ON",
        "group": "8f574078854e0b61",
        "order": 5,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "2 - ON",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"state\":\"1\",\"port\":\"2\",\"id\":\"14530877\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 590,
        "y": 1200,
        "wires": [
            [
                "de8bd57756400535"
            ]
        ]
    },
    {
        "id": "f66d1cd42f4bf633",
        "type": "ui_button",
        "z": "3e84c5cf3d615558",
        "name": "14530877 - 2 - OFF",
        "group": "8f574078854e0b61",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "2 - OFF",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"state\":\"0\",\"port\":\"2\",\"id\":\"14530877\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 600,
        "y": 1240,
        "wires": [
            [
                "de8bd57756400535"
            ]
        ]
    },
    {
        "id": "f30c6b9b151a706e",
        "type": "ui_button",
        "z": "3e84c5cf3d615558",
        "name": "14530877 - 3 - ON",
        "group": "8f574078854e0b61",
        "order": 7,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "3 - ON",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"state\":\"1\",\"port\":\"3\",\"id\":\"14530877\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 590,
        "y": 1280,
        "wires": [
            [
                "de8bd57756400535"
            ]
        ]
    },
    {
        "id": "f561f49fa2b4f114",
        "type": "ui_button",
        "z": "3e84c5cf3d615558",
        "name": "14530877 - 3 - OFF",
        "group": "8f574078854e0b61",
        "order": 8,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "3 - OFF",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"state\":\"0\",\"port\":\"3\",\"id\":\"14530877\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 600,
        "y": 1320,
        "wires": [
            [
                "de8bd57756400535"
            ]
        ]
    },
    {
        "id": "4bdf1ff4d425a754",
        "type": "ui_button",
        "z": "3e84c5cf3d615558",
        "name": "14530877 - 4 - ON",
        "group": "8f574078854e0b61",
        "order": 9,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "4 - ON",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"state\":\"1\",\"port\":\"4\",\"id\":\"14530877\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 590,
        "y": 1360,
        "wires": [
            [
                "de8bd57756400535"
            ]
        ]
    },
    {
        "id": "b28093f1f3defca6",
        "type": "ui_button",
        "z": "3e84c5cf3d615558",
        "name": "14530877 - 4 - OFF",
        "group": "8f574078854e0b61",
        "order": 10,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "4 - OFF",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"state\":\"0\",\"port\":\"4\",\"id\":\"14530877\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 600,
        "y": 1400,
        "wires": [
            [
                "de8bd57756400535"
            ]
        ]
    },
    {
        "id": "8c9c9cebfe559524",
        "type": "ui_button",
        "z": "3e84c5cf3d615558",
        "name": "14530877 - 5 - ON",
        "group": "8f574078854e0b61",
        "order": 11,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "5 - ON",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"state\":\"1\",\"port\":\"5\",\"id\":\"14530877\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 590,
        "y": 1440,
        "wires": [
            [
                "de8bd57756400535"
            ]
        ]
    },
    {
        "id": "4ce65755a109ea07",
        "type": "ui_button",
        "z": "3e84c5cf3d615558",
        "name": "14530877 - 5 - OFF",
        "group": "8f574078854e0b61",
        "order": 12,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "5 - OFF",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"state\":\"0\",\"port\":\"5\",\"id\":\"14530877\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 600,
        "y": 1480,
        "wires": [
            [
                "de8bd57756400535"
            ]
        ]
    },
    {
        "id": "37cff7924070bc39",
        "type": "ui_button",
        "z": "3e84c5cf3d615558",
        "name": "14530877 - 6 - ON",
        "group": "8f574078854e0b61",
        "order": 13,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "6 - ON",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"state\":\"1\",\"port\":\"6\",\"id\":\"14530877\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 590,
        "y": 1520,
        "wires": [
            [
                "de8bd57756400535"
            ]
        ]
    },
    {
        "id": "4a96aeda96469289",
        "type": "ui_button",
        "z": "3e84c5cf3d615558",
        "name": "14530877 - 6 - OFF",
        "group": "8f574078854e0b61",
        "order": 14,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "6 - OFF",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"state\":\"0\",\"port\":\"6\",\"id\":\"14530877\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 600,
        "y": 1560,
        "wires": [
            [
                "de8bd57756400535"
            ]
        ]
    },
    {
        "id": "dd8cf75906fb1eeb",
        "type": "function",
        "z": "3e84c5cf3d615558",
        "name": "14530877",
        "func": "const id = 14530877;\n\nlet mqttTopic = msg.topic;\nlet topics = mqttTopic.split('/');\n\nif(topics[1].toString() === id.toString()){\n    msg.device = topics[1];\n    msg.port = topics[3];\n    node.send(msg);\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 260,
        "wires": [
            [
                "148a6482ca034d22"
            ]
        ]
    },
    {
        "id": "148a6482ca034d22",
        "type": "switch",
        "z": "3e84c5cf3d615558",
        "name": "",
        "property": "port",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 130,
        "y": 1340,
        "wires": [
            [
                "6cc20f463a18e115"
            ],
            [
                "0e4c2fd998ef815c"
            ],
            [
                "664eb3cd41a096c8"
            ],
            [
                "fae6eab5b348f3bc"
            ],
            [
                "432b27df7c1ea3da"
            ],
            [
                "68dd2afa98531743"
            ],
            [
                "9c3375df96319296"
            ],
            [
                "72c4768caa1201ea"
            ]
        ]
    },
    {
        "id": "6cc20f463a18e115",
        "type": "function",
        "z": "3e84c5cf3d615558",
        "name": "",
        "func": "var msgOn = {};\nvar msgOff = {};\n\nif(msg.payload === \"0\"){\n    // disable off button\n    msgOff.enabled = false;\n    msgOn.enabled = true;\n}else{\n    // disable on button\n    msgOff.enabled = true;\n    msgOn.enabled = false;\n}\nnode.send([[msgOn],[msgOff]]);\n\n// return msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1200,
        "wires": [
            [
                "e652067f921821a7"
            ],
            [
                "d219fb45573d547f"
            ]
        ]
    },
    {
        "id": "0e4c2fd998ef815c",
        "type": "function",
        "z": "3e84c5cf3d615558",
        "name": "",
        "func": "var msgOn = {};\nvar msgOff = {};\n\nif(msg.payload === \"0\"){\n    // disable off button\n    msgOff.enabled = false;\n    msgOn.enabled = true;\n}else{\n    // disable on button\n    msgOff.enabled = true;\n    msgOn.enabled = false;\n}\nnode.send([[msgOn],[msgOff]]);\n\n// return msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1240,
        "wires": [
            [
                "fcccb6d1c053b19c"
            ],
            [
                "a30232e05571c13c"
            ]
        ]
    },
    {
        "id": "664eb3cd41a096c8",
        "type": "function",
        "z": "3e84c5cf3d615558",
        "name": "",
        "func": "var msgOn = {};\nvar msgOff = {};\n\nif(msg.payload === \"0\"){\n    // disable off button\n    msgOff.enabled = false;\n    msgOn.enabled = true;\n}else{\n    // disable on button\n    msgOff.enabled = true;\n    msgOn.enabled = false;\n}\nnode.send([[msgOn],[msgOff]]);\n\n// return msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1280,
        "wires": [
            [
                "93f4dc590c330dbc"
            ],
            [
                "f66d1cd42f4bf633"
            ]
        ]
    },
    {
        "id": "fae6eab5b348f3bc",
        "type": "function",
        "z": "3e84c5cf3d615558",
        "name": "",
        "func": "var msgOn = {};\nvar msgOff = {};\n\nif(msg.payload === \"0\"){\n    // disable off button\n    msgOff.enabled = false;\n    msgOn.enabled = true;\n}else{\n    // disable on button\n    msgOff.enabled = true;\n    msgOn.enabled = false;\n}\nnode.send([[msgOn],[msgOff]]);\n\n// return msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1320,
        "wires": [
            [
                "f30c6b9b151a706e"
            ],
            [
                "f561f49fa2b4f114"
            ]
        ]
    },
    {
        "id": "432b27df7c1ea3da",
        "type": "function",
        "z": "3e84c5cf3d615558",
        "name": "",
        "func": "var msgOn = {};\nvar msgOff = {};\n\nif(msg.payload === \"0\"){\n    // disable off button\n    msgOff.enabled = false;\n    msgOn.enabled = true;\n}else{\n    // disable on button\n    msgOff.enabled = true;\n    msgOn.enabled = false;\n}\nnode.send([[msgOn],[msgOff]]);\n\n// return msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1360,
        "wires": [
            [
                "4bdf1ff4d425a754"
            ],
            [
                "b28093f1f3defca6"
            ]
        ]
    },
    {
        "id": "68dd2afa98531743",
        "type": "function",
        "z": "3e84c5cf3d615558",
        "name": "",
        "func": "var msgOn = {};\nvar msgOff = {};\n\nif(msg.payload === \"0\"){\n    // disable off button\n    msgOff.enabled = false;\n    msgOn.enabled = true;\n}else{\n    // disable on button\n    msgOff.enabled = true;\n    msgOn.enabled = false;\n}\nnode.send([[msgOn],[msgOff]]);\n\n// return msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1400,
        "wires": [
            [
                "8c9c9cebfe559524"
            ],
            [
                "4ce65755a109ea07"
            ]
        ]
    },
    {
        "id": "9c3375df96319296",
        "type": "function",
        "z": "3e84c5cf3d615558",
        "name": "",
        "func": "var msgOn = {};\nvar msgOff = {};\n\nif(msg.payload === \"0\"){\n    // disable off button\n    msgOff.enabled = false;\n    msgOn.enabled = true;\n}else{\n    // disable on button\n    msgOff.enabled = true;\n    msgOn.enabled = false;\n}\nnode.send([[msgOn],[msgOff]]);\n\n// return msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1440,
        "wires": [
            [
                "37cff7924070bc39"
            ],
            [
                "4a96aeda96469289"
            ]
        ]
    },
    {
        "id": "72c4768caa1201ea",
        "type": "function",
        "z": "3e84c5cf3d615558",
        "name": "",
        "func": "var msgOn = {};\nvar msgOff = {};\n\nif(msg.payload === \"0\"){\n    // disable off button\n    msgOff.enabled = false;\n    msgOn.enabled = true;\n}else{\n    // disable on button\n    msgOff.enabled = true;\n    msgOn.enabled = false;\n}\nnode.send([[msgOn],[msgOff]]);\n\n// return msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1480,
        "wires": [
            [
                "46688c056e01e066"
            ],
            [
                "9aba7f1c3f649827"
            ]
        ]
    },
    {
        "id": "46688c056e01e066",
        "type": "ui_button",
        "z": "3e84c5cf3d615558",
        "name": "14530877 - 7 - ON",
        "group": "8f574078854e0b61",
        "order": 15,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "7 - ON",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"state\":\"1\",\"port\":\"7\",\"id\":\"14530877\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 590,
        "y": 1600,
        "wires": [
            [
                "de8bd57756400535"
            ]
        ]
    },
    {
        "id": "9aba7f1c3f649827",
        "type": "ui_button",
        "z": "3e84c5cf3d615558",
        "name": "14530877 - 7 - OFF",
        "group": "8f574078854e0b61",
        "order": 16,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "7 - OFF",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"state\":\"0\",\"port\":\"7\",\"id\":\"14530877\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 600,
        "y": 1640,
        "wires": [
            [
                "de8bd57756400535"
            ]
        ]
    },
    {
        "id": "de8bd57756400535",
        "type": "function",
        "z": "3e84c5cf3d615558",
        "name": "set port",
        "func": "const maxPort = 4;\nconst ON = \"1\";\nconst OFF = \"0\";\n\n// MQTT settings\nlet topicBase = \nmsg.qos = 0;\nmsg.retain = false;\n\nlet command = msg.payload; \nmsg.topic = \"lasermaze/\" + command.id + \"/output/\" + command.port + \"/\";\nmsg.payload = command.state;\nnode.send(msg);\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 1340,
        "wires": [
            [
                "179ff4162a99f002"
            ]
        ]
    },
    {
        "id": "4a368bfdc9704ba1",
        "type": "mqtt in",
        "z": "3e84c5cf3d615558",
        "name": "state",
        "topic": "lasermaze/+/state/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "250ff9a.803fb06",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 90,
        "y": 220,
        "wires": [
            [
                "6366b9f7099b2504",
                "f527869152666abd",
                "dd8cf75906fb1eeb",
                "45ddc3f75e2737b5"
            ]
        ]
    },
    {
        "id": "31bccbc64829741d",
        "type": "inject",
        "z": "3e84c5cf3d615558",
        "name": "9@14530877",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "lasermaze/14530877/output/9/",
        "payload": "0",
        "payloadType": "num",
        "x": 600,
        "y": 260,
        "wires": [
            [
                "8b733a605e170392"
            ]
        ]
    },
    {
        "id": "3651075a741b1fbc",
        "type": "inject",
        "z": "3e84c5cf3d615558",
        "name": "9@14493860",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "31",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "lasermaze/14493860/output/9/",
        "payload": "0",
        "payloadType": "num",
        "x": 600,
        "y": 220,
        "wires": [
            [
                "8b733a605e170392"
            ]
        ]
    },
    {
        "id": "28e23580589e7c2a",
        "type": "inject",
        "z": "3e84c5cf3d615558",
        "name": "9@14769654",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "32",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "lasermaze/14769654/output/9/",
        "payload": "0",
        "payloadType": "num",
        "x": 600,
        "y": 180,
        "wires": [
            [
                "8b733a605e170392"
            ]
        ]
    },
    {
        "id": "8b733a605e170392",
        "type": "mqtt out",
        "z": "3e84c5cf3d615558",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "250ff9a.803fb06",
        "x": 870,
        "y": 220,
        "wires": []
    },
    {
        "id": "45ddc3f75e2737b5",
        "type": "link out",
        "z": "3e84c5cf3d615558",
        "name": "Port state from MQTT",
        "mode": "link",
        "links": [
            "7982c6c542d663f9"
        ],
        "x": 275,
        "y": 140,
        "wires": []
    },
    {
        "id": "3a55666fddd57745",
        "type": "link in",
        "z": "3e84c5cf3d615558",
        "name": "To MQTT",
        "links": [
            "210bb4b30731e987",
            "79e4f3ae43d7e057",
            "e9bfb897dcbc2115"
        ],
        "x": 915,
        "y": 980,
        "wires": [
            [
                "179ff4162a99f002"
            ]
        ]
    },
    {
        "id": "116956766c49aa47",
        "type": "mqtt in",
        "z": "14b665ce20ae005d",
        "name": "localhost",
        "topic": "lasermaze/+/input/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "250ff9a.803fb06",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 120,
        "y": 520,
        "wires": [
            [
                "0659549ac6e0af0f",
                "8c5964e962f7613e",
                "486eacf8f39143a4",
                "d2af7c6733654f4f",
                "569bb307f1dce85b"
            ]
        ]
    },
    {
        "id": "486eacf8f39143a4",
        "type": "debug",
        "z": "14b665ce20ae005d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 480,
        "wires": []
    },
    {
        "id": "0659549ac6e0af0f",
        "type": "function",
        "z": "14b665ce20ae005d",
        "name": "1 - 14734117",
        "func": "const id = 14734117;\nconst maxPort = 6;\nconst ON = \"1\";\nconst OFF = \"0\";\n\n// memeory template for context\nvar _memoryTemplate = {\n\t\"i\" : 0,\n\t\"state\" : 0x00\n}\n\n// Get context data and set deafult when not existing\nvar memory = flow.get(id.toString());\nif (memory === undefined) //test exists\n{\n  memory = _memoryTemplate;\n}\n\n\nlet mqttTopic = msg.topic;\nlet topics = mqttTopic.split('/');\nlet device = topics[1];\n\nif(device.toString() === id.toString()){\n    let state = msg.payload;\n    msg.payload = state;\n    msg.id = device;\n    msg.state = state;\n    msg.port = topics[3];\n    node.send(msg);\n}\n\n\n\n\n\n// Save context data\nflow.set(id.toString(), memory);\n\n// return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 520,
        "wires": [
            [
                "6b4f417cc7429e2e"
            ]
        ]
    },
    {
        "id": "9778381ddff2d206",
        "type": "ui_led",
        "z": "14b665ce20ae005d",
        "order": 1,
        "group": "aa53a1fae4f5c3fc",
        "width": 0,
        "height": 0,
        "label": "0",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#008000",
                "value": "1",
                "valueType": "str"
            },
            {
                "color": "#ff0000",
                "value": "0",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 650,
        "y": 400,
        "wires": []
    },
    {
        "id": "5e95ece44f94442c",
        "type": "ui_led",
        "z": "14b665ce20ae005d",
        "order": 5,
        "group": "aa53a1fae4f5c3fc",
        "width": 0,
        "height": 0,
        "label": "4",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#008000",
                "value": "1",
                "valueType": "str"
            },
            {
                "color": "#ff0000",
                "value": "0",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 650,
        "y": 560,
        "wires": []
    },
    {
        "id": "6e812f99bb26cbef",
        "type": "ui_led",
        "z": "14b665ce20ae005d",
        "order": 2,
        "group": "aa53a1fae4f5c3fc",
        "width": 0,
        "height": 0,
        "label": "1",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#008000",
                "value": "1",
                "valueType": "str"
            },
            {
                "color": "#ff0000",
                "value": "0",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 650,
        "y": 440,
        "wires": []
    },
    {
        "id": "fddd89bfbfd6bc33",
        "type": "ui_led",
        "z": "14b665ce20ae005d",
        "order": 3,
        "group": "aa53a1fae4f5c3fc",
        "width": 0,
        "height": 0,
        "label": "2",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#008000",
                "value": "1",
                "valueType": "str"
            },
            {
                "color": "#ff0000",
                "value": "0",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 650,
        "y": 480,
        "wires": []
    },
    {
        "id": "4559354309676911",
        "type": "ui_led",
        "z": "14b665ce20ae005d",
        "order": 4,
        "group": "aa53a1fae4f5c3fc",
        "width": 0,
        "height": 0,
        "label": "3",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#008000",
                "value": "1",
                "valueType": "str"
            },
            {
                "color": "#ff0000",
                "value": "0",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 650,
        "y": 520,
        "wires": []
    },
    {
        "id": "d45845b809e2390b",
        "type": "ui_led",
        "z": "14b665ce20ae005d",
        "order": 6,
        "group": "aa53a1fae4f5c3fc",
        "width": 0,
        "height": 0,
        "label": "5",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#008000",
                "value": "1",
                "valueType": "str"
            },
            {
                "color": "#ff0000",
                "value": "0",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 650,
        "y": 600,
        "wires": []
    },
    {
        "id": "b7ca4db26c786682",
        "type": "ui_led",
        "z": "14b665ce20ae005d",
        "order": 7,
        "group": "aa53a1fae4f5c3fc",
        "width": 0,
        "height": 0,
        "label": "6",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#008000",
                "value": "1",
                "valueType": "str"
            },
            {
                "color": "#ff0000",
                "value": "0",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 650,
        "y": 640,
        "wires": []
    },
    {
        "id": "6b4f417cc7429e2e",
        "type": "switch",
        "z": "14b665ce20ae005d",
        "name": "",
        "property": "port",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "6",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 450,
        "y": 520,
        "wires": [
            [
                "9778381ddff2d206"
            ],
            [
                "6e812f99bb26cbef"
            ],
            [
                "fddd89bfbfd6bc33"
            ],
            [
                "4559354309676911"
            ],
            [
                "5e95ece44f94442c"
            ],
            [
                "d45845b809e2390b"
            ],
            [
                "b7ca4db26c786682"
            ]
        ]
    },
    {
        "id": "8c5964e962f7613e",
        "type": "function",
        "z": "14b665ce20ae005d",
        "name": "x - 14771609",
        "func": "const id = 14771609;\nconst maxPort = 6;\nconst ON = \"1\";\nconst OFF = \"0\";\n\n// memeory template for context\nvar _memoryTemplate = {\n\t\"i\" : 0,\n\t\"state\" : 0x00\n}\n\n// Get context data and set deafult when not existing\nvar memory = flow.get(id.toString());\nif (memory === undefined) //test exists\n{\n  memory = _memoryTemplate;\n}\n\n\nlet mqttTopic = msg.topic;\nlet topics = mqttTopic.split('/');\nlet device = topics[1];\n\nif(device.toString() === id.toString()){\n    let state = msg.payload;\n    msg.payload = state;\n    msg.id = device;\n    msg.state = state;\n    msg.port = topics[3];\n    node.send(msg);\n}\n\n\n\n\n\n// Save context data\nflow.set(id.toString(), memory);\n\n// return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1040,
        "wires": [
            [
                "51d8204139e7af17"
            ]
        ]
    },
    {
        "id": "7e9b456f6a38e41b",
        "type": "ui_led",
        "z": "14b665ce20ae005d",
        "order": 1,
        "group": "d4b46c88d0dadebe",
        "width": 0,
        "height": 0,
        "label": "0",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#008000",
                "value": "1",
                "valueType": "str"
            },
            {
                "color": "#ff0000",
                "value": "0",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 650,
        "y": 920,
        "wires": []
    },
    {
        "id": "066cb6edfc5a1dbd",
        "type": "ui_led",
        "z": "14b665ce20ae005d",
        "order": 4,
        "group": "d4b46c88d0dadebe",
        "width": 0,
        "height": 0,
        "label": "4",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#008000",
                "value": "1",
                "valueType": "str"
            },
            {
                "color": "#ff0000",
                "value": "0",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 650,
        "y": 1080,
        "wires": []
    },
    {
        "id": "606176a17ddc267b",
        "type": "ui_led",
        "z": "14b665ce20ae005d",
        "order": 7,
        "group": "d4b46c88d0dadebe",
        "width": 0,
        "height": 0,
        "label": "1",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#008000",
                "value": "1",
                "valueType": "str"
            },
            {
                "color": "#ff0000",
                "value": "0",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 650,
        "y": 960,
        "wires": []
    },
    {
        "id": "14574879c2e9d47c",
        "type": "ui_led",
        "z": "14b665ce20ae005d",
        "order": 2,
        "group": "d4b46c88d0dadebe",
        "width": 0,
        "height": 0,
        "label": "2",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#008000",
                "value": "1",
                "valueType": "str"
            },
            {
                "color": "#ff0000",
                "value": "0",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 650,
        "y": 1000,
        "wires": []
    },
    {
        "id": "59e83c97c3603d3e",
        "type": "ui_led",
        "z": "14b665ce20ae005d",
        "order": 3,
        "group": "d4b46c88d0dadebe",
        "width": 0,
        "height": 0,
        "label": "3",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#008000",
                "value": "1",
                "valueType": "str"
            },
            {
                "color": "#ff0000",
                "value": "0",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 650,
        "y": 1040,
        "wires": []
    },
    {
        "id": "33b6a84f26a1f180",
        "type": "ui_led",
        "z": "14b665ce20ae005d",
        "order": 5,
        "group": "d4b46c88d0dadebe",
        "width": 0,
        "height": 0,
        "label": "5",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#008000",
                "value": "1",
                "valueType": "str"
            },
            {
                "color": "#ff0000",
                "value": "0",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 650,
        "y": 1120,
        "wires": []
    },
    {
        "id": "f80c9aa97a754b79",
        "type": "ui_led",
        "z": "14b665ce20ae005d",
        "order": 6,
        "group": "d4b46c88d0dadebe",
        "width": 0,
        "height": 0,
        "label": "6",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#008000",
                "value": "1",
                "valueType": "str"
            },
            {
                "color": "#ff0000",
                "value": "0",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 650,
        "y": 1160,
        "wires": []
    },
    {
        "id": "51d8204139e7af17",
        "type": "switch",
        "z": "14b665ce20ae005d",
        "name": "",
        "property": "port",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "6",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 450,
        "y": 1040,
        "wires": [
            [
                "7e9b456f6a38e41b"
            ],
            [
                "606176a17ddc267b"
            ],
            [
                "14574879c2e9d47c"
            ],
            [
                "59e83c97c3603d3e"
            ],
            [
                "066cb6edfc5a1dbd"
            ],
            [
                "33b6a84f26a1f180"
            ],
            [
                "f80c9aa97a754b79"
            ]
        ]
    },
    {
        "id": "550c5213391d0ade",
        "type": "mqtt in",
        "z": "14b665ce20ae005d",
        "name": "localhost",
        "topic": "lasermaze/+/wifi/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "250ff9a.803fb06",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 120,
        "y": 340,
        "wires": [
            [
                "afacc9198954a73f"
            ]
        ]
    },
    {
        "id": "afacc9198954a73f",
        "type": "function",
        "z": "14b665ce20ae005d",
        "name": "Extract RSSI by ID",
        "func": "msg.mqttTopic = msg.topic;\nvar topics = msg.topic.split('/');\nmsg.topic = topics[1];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 340,
        "wires": [
            [
                "7dec996ed7f7259a",
                "814b5fb2cb647657"
            ]
        ]
    },
    {
        "id": "7dec996ed7f7259a",
        "type": "ui_chart",
        "z": "14b665ce20ae005d",
        "name": "RSSI",
        "group": "4f1dda1ab9d88666",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "RSSI [dBm]",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": "15",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 650,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "814b5fb2cb647657",
        "type": "debug",
        "z": "14b665ce20ae005d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 300,
        "wires": []
    },
    {
        "id": "1bcde0b2c779ccbd",
        "type": "inject",
        "z": "14b665ce20ae005d",
        "name": "9@2 - 14733772",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "34",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "lasermaze/14733772/input/9/",
        "payload": "0",
        "payloadType": "num",
        "x": 150,
        "y": 180,
        "wires": [
            [
                "fcca2048077acd7a"
            ]
        ]
    },
    {
        "id": "0701c27d886bfae3",
        "type": "inject",
        "z": "14b665ce20ae005d",
        "name": "9@1 - 14734117",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "33",
        "crontab": "",
        "once": true,
        "onceDelay": "0.2",
        "topic": "lasermaze/14734117/input/9/",
        "payload": "0",
        "payloadType": "num",
        "x": 150,
        "y": 140,
        "wires": [
            [
                "fcca2048077acd7a"
            ]
        ]
    },
    {
        "id": "fcca2048077acd7a",
        "type": "mqtt out",
        "z": "14b665ce20ae005d",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "250ff9a.803fb06",
        "x": 390,
        "y": 180,
        "wires": []
    },
    {
        "id": "019c81e93194311f",
        "type": "trigger",
        "z": "14b665ce20ae005d",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "val",
        "op2type": "val",
        "duration": "250",
        "extend": "false",
        "overrideDelay": "false",
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 390,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "5b6f15242c9ee3dd",
        "type": "inject",
        "z": "14b665ce20ae005d",
        "name": "9@x - 14771609",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "35",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "lasermaze/14771609/input/9/",
        "payload": "0",
        "payloadType": "num",
        "x": 150,
        "y": 220,
        "wires": [
            [
                "fcca2048077acd7a"
            ]
        ]
    },
    {
        "id": "d2af7c6733654f4f",
        "type": "function",
        "z": "14b665ce20ae005d",
        "name": "2 - 14733772",
        "func": "const id = 14733772;\nconst maxPort = 6;\nconst ON = \"1\";\nconst OFF = \"0\";\n\n// memeory template for context\nvar _memoryTemplate = {\n\t\"i\" : 0,\n\t\"state\" : 0x00\n}\n\n// Get context data and set deafult when not existing\nvar memory = flow.get(id.toString());\nif (memory === undefined) //test exists\n{\n  memory = _memoryTemplate;\n}\n\n\nlet mqttTopic = msg.topic;\nlet topics = mqttTopic.split('/');\nlet device = topics[1];\n\nif(device.toString() === id.toString()){\n    let state = msg.payload;\n    msg.payload = state;\n    msg.id = device;\n    msg.state = state;\n    msg.port = topics[3];\n    node.send(msg);\n}\n\n\n\n\n\n// Save context data\nflow.set(id.toString(), memory);\n\n// return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 780,
        "wires": [
            [
                "1599c7bc0a97ca40"
            ]
        ]
    },
    {
        "id": "c42ae7bdccbd45be",
        "type": "ui_led",
        "z": "14b665ce20ae005d",
        "order": 1,
        "group": "d669fe7b63ed71a3",
        "width": 0,
        "height": 0,
        "label": "0",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#008000",
                "value": "1",
                "valueType": "str"
            },
            {
                "color": "#ff0000",
                "value": "0",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 810,
        "y": 660,
        "wires": []
    },
    {
        "id": "19b8ae90d01fd54a",
        "type": "ui_led",
        "z": "14b665ce20ae005d",
        "order": 5,
        "group": "d669fe7b63ed71a3",
        "width": 0,
        "height": 0,
        "label": "4",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#008000",
                "value": "1",
                "valueType": "str"
            },
            {
                "color": "#ff0000",
                "value": "0",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 810,
        "y": 820,
        "wires": []
    },
    {
        "id": "7d89c4a703a15343",
        "type": "ui_led",
        "z": "14b665ce20ae005d",
        "order": 2,
        "group": "d669fe7b63ed71a3",
        "width": 0,
        "height": 0,
        "label": "1",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#008000",
                "value": "1",
                "valueType": "str"
            },
            {
                "color": "#ff0000",
                "value": "0",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 810,
        "y": 700,
        "wires": []
    },
    {
        "id": "eac7647e99f70cde",
        "type": "ui_led",
        "z": "14b665ce20ae005d",
        "order": 3,
        "group": "d669fe7b63ed71a3",
        "width": 0,
        "height": 0,
        "label": "2",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#008000",
                "value": "1",
                "valueType": "str"
            },
            {
                "color": "#ff0000",
                "value": "0",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 810,
        "y": 740,
        "wires": []
    },
    {
        "id": "76091ae55c55eeb2",
        "type": "ui_led",
        "z": "14b665ce20ae005d",
        "order": 4,
        "group": "d669fe7b63ed71a3",
        "width": 0,
        "height": 0,
        "label": "3",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#008000",
                "value": "1",
                "valueType": "str"
            },
            {
                "color": "#ff0000",
                "value": "0",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 810,
        "y": 780,
        "wires": []
    },
    {
        "id": "fe06a67afc8e69da",
        "type": "ui_led",
        "z": "14b665ce20ae005d",
        "order": 6,
        "group": "d669fe7b63ed71a3",
        "width": 0,
        "height": 0,
        "label": "5",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#008000",
                "value": "1",
                "valueType": "str"
            },
            {
                "color": "#ff0000",
                "value": "0",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 810,
        "y": 860,
        "wires": []
    },
    {
        "id": "12f6c3af52b7c0e2",
        "type": "ui_led",
        "z": "14b665ce20ae005d",
        "order": 7,
        "group": "d669fe7b63ed71a3",
        "width": 0,
        "height": 0,
        "label": "6",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#008000",
                "value": "1",
                "valueType": "str"
            },
            {
                "color": "#ff0000",
                "value": "0",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 810,
        "y": 900,
        "wires": []
    },
    {
        "id": "1599c7bc0a97ca40",
        "type": "switch",
        "z": "14b665ce20ae005d",
        "name": "",
        "property": "port",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "6",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 610,
        "y": 780,
        "wires": [
            [
                "c42ae7bdccbd45be"
            ],
            [
                "7d89c4a703a15343"
            ],
            [
                "eac7647e99f70cde"
            ],
            [
                "76091ae55c55eeb2"
            ],
            [
                "19b8ae90d01fd54a"
            ],
            [
                "fe06a67afc8e69da"
            ],
            [
                "12f6c3af52b7c0e2"
            ]
        ]
    },
    {
        "id": "569bb307f1dce85b",
        "type": "link out",
        "z": "14b665ce20ae005d",
        "name": "Input state from MQTT",
        "mode": "link",
        "links": [
            "e0113d9f613618fd",
            "c14b66e0da959137",
            "dee4c8a2fc5bcfa4"
        ],
        "x": 225,
        "y": 440,
        "wires": []
    },
    {
        "id": "3620555d11c280fd",
        "type": "mqtt in",
        "z": "49fbf15f.3b175",
        "name": "localhost",
        "topic": "lasermaze/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "250ff9a.803fb06",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 140,
        "y": 60,
        "wires": [
            [
                "5756912b5eacfde7"
            ]
        ]
    },
    {
        "id": "5756912b5eacfde7",
        "type": "debug",
        "z": "49fbf15f.3b175",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 60,
        "wires": []
    },
    {
        "id": "f7bb29ec94eb1366",
        "type": "mqtt out",
        "z": "49fbf15f.3b175",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "250ff9a.803fb06",
        "x": 770,
        "y": 220,
        "wires": []
    },
    {
        "id": "4cd34c7c2e50e202",
        "type": "inject",
        "z": "49fbf15f.3b175",
        "name": "7-1",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "lasermaze/14769654/output/7/",
        "payload": "1",
        "payloadType": "num",
        "x": 150,
        "y": 120,
        "wires": [
            [
                "f7bb29ec94eb1366"
            ]
        ]
    },
    {
        "id": "01130c4d6b4f8711",
        "type": "inject",
        "z": "49fbf15f.3b175",
        "name": "1-0",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "lasermaze/14530877/output/0/",
        "payload": "0",
        "payloadType": "num",
        "x": 150,
        "y": 260,
        "wires": [
            [
                "f7bb29ec94eb1366"
            ]
        ]
    },
    {
        "id": "eaef0c1449dab2d3",
        "type": "inject",
        "z": "49fbf15f.3b175",
        "name": "9",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "lasermaze/14769654/output/9/",
        "payload": "0",
        "payloadType": "num",
        "x": 150,
        "y": 320,
        "wires": [
            [
                "f7bb29ec94eb1366"
            ]
        ]
    },
    {
        "id": "70b68679e78b9604",
        "type": "inject",
        "z": "49fbf15f.3b175",
        "name": "7-0",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "lasermaze/14769654/output/7/",
        "payload": "0",
        "payloadType": "num",
        "x": 150,
        "y": 160,
        "wires": [
            [
                "f7bb29ec94eb1366"
            ]
        ]
    },
    {
        "id": "daab57f10f11b196",
        "type": "inject",
        "z": "49fbf15f.3b175",
        "name": "1-1",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "lasermaze/14530877/output/0/",
        "payload": "1",
        "payloadType": "num",
        "x": 150,
        "y": 220,
        "wires": [
            [
                "f7bb29ec94eb1366"
            ]
        ]
    },
    {
        "id": "dcfc7bac681587df",
        "type": "inject",
        "z": "49fbf15f.3b175",
        "name": "input 9",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "lasermaze/14733772/input/9/",
        "payload": "0",
        "payloadType": "num",
        "x": 150,
        "y": 520,
        "wires": [
            [
                "f7bb29ec94eb1366"
            ]
        ]
    },
    {
        "id": "cace73046eeb123d",
        "type": "debug",
        "z": "49fbf15f.3b175",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 460,
        "wires": []
    },
    {
        "id": "524220dd2e04d5c1",
        "type": "mqtt in",
        "z": "49fbf15f.3b175",
        "name": "localhost",
        "topic": "lasermaze/+/input/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "250ff9a.803fb06",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 580,
        "y": 460,
        "wires": [
            [
                "cace73046eeb123d"
            ]
        ]
    },
    {
        "id": "444a4311f2a074bd",
        "type": "inject",
        "z": "1007930ba5f8f5d0",
        "name": "Set default",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 360,
        "y": 80,
        "wires": [
            [
                "55e43c362ad831ae"
            ]
        ]
    },
    {
        "id": "55e43c362ad831ae",
        "type": "function",
        "z": "1007930ba5f8f5d0",
        "name": "Configure flow context data",
        "func": "const _stateTemplate = {\n    \"gate\": [\n        {\n            \"RXNode\": 14734117,\n            \"RXPort\": 0,\n            \"stateRX\": \"0\",\n            \"TXNode\": 14530877,\n            \"TXPort\": 0,\n            \"stateTX\": \"1\"\n        },\n        {\n            \"RXNode\": 14734117,\n            \"RXPort\": 1,\n            \"stateRX\": \"0\",\n            \"TXNode\": 14530877,\n            \"TXPort\": 1,\n            \"stateTX\": \"1\"\n        },\n        {\n            \"RXNode\": 14734117,\n            \"RXPort\": 2,\n            \"stateRX\": \"0\",\n            \"TXNode\": 14530877,\n            \"TXPort\": 2,\n            \"stateTX\": \"1\"\n        }\n        // ,\n        // {\n        //     \"RXNode\": 14734117,\n        //     \"RXPort\": 3,\n        //     \"stateRX\": \"0\",\n        //     \"TXNode\": 14530877,\n        //     \"TXPort\": 0,\n        //     \"stateTX\": 0\n        // },\n        // {\n        //     \"RXNode\": 14734117,\n        //     \"RXPort\": 4,\n        //     \"stateRX\": \"0\",\n        //     \"TXNode\": 14530877,\n        //     \"TXPort\": 0,\n        //     \"stateTX\": 0\n        // },\n        // {\n        //     \"RXNode\": 14734117,\n        //     \"RXPort\": 5,\n        //     \"stateRX\": \"0\",\n        //     \"TXNode\": 14530877,\n        //     \"TXPort\": 0,\n        //     \"stateTX\": 0\n        // },\n        // {\n        //     \"RXNode\": 14734117,\n        //     \"RXPort\": 6,\n        //     \"stateRX\": \"0\",\n        //     \"TXNode\": 14530877,\n        //     \"TXPort\": 0,\n        //     \"stateTX\": 0\n        // },\n        // {\n        //     \"RXNode\": 14733772,\n        //     \"RXPort\": 0,\n        //     \"stateRX\": \"0\",\n        //     \"TXNode\": 1,\n        //     \"TXPort\": 0,\n        //     \"stateTX\": 0\n        // },\n        // {\n        //     \"RXNode\": 14733772,\n        //     \"RXPort\": 1,\n        //     \"stateRX\": \"0\",\n        //     \"TXNode\": 1,\n        //     \"TXPort\": 0,\n        //     \"stateTX\": 0\n        // },\n        // {\n        //     \"RXNode\": 14733772,\n        //     \"RXPort\": 2,\n        //     \"stateRX\": \"0\",\n        //     \"TXNode\": 1,\n        //     \"TXPort\": 0,\n        //     \"stateTX\": 0\n        // },\n        // {\n        //     \"RXNode\": 14733772,\n        //     \"RXPort\": 3,\n        //     \"stateRX\": \"0\",\n        //     \"TXNode\": 1,\n        //     \"TXPort\": 0,\n        //     \"stateTX\": 0\n        // },\n        // {\n        //     \"RXNode\": 14733772,\n        //     \"RXPort\": 4,\n        //     \"stateRX\": \"0\",\n        //     \"TXNode\": 1,\n        //     \"TXPort\": 0,\n        //     \"stateTX\": 0\n        // },\n        // {\n        //     \"RXNode\": 14733772,\n        //     \"RXPort\": 5,\n        //     \"stateRX\": \"0\",\n        //     \"TXNode\": 1,\n        //     \"TXPort\": 0,\n        //     \"stateTX\": 0\n        // },\n        // {\n        //     \"RXNode\": 14733772,\n        //     \"RXPort\": 6,\n        //     \"stateRX\": \"0\",\n        //     \"TXNode\": 1,\n        //     \"TXPort\": 0,\n        //     \"stateTX\": 0\n        // },\n        // {\n        //     \"RXNode\": 14771609,\n        //     \"RXPort\": 0,\n        //     \"stateRX\": \"0\",\n        //     \"TXNode\": 2,\n        //     \"TXPort\": 0,\n        //     \"stateTX\": 0\n        // },\n        // {\n        //     \"RXNode\": 14771609,\n        //     \"RXPort\": 1,\n        //     \"stateRX\": \"0\",\n        //     \"TXNode\": 2,\n        //     \"TXPort\": 0,\n        //     \"stateTX\": 0\n        // },\n        // {\n        //     \"RXNode\": 14771609,\n        //     \"RXPort\": 2,\n        //     \"stateRX\": \"0\",\n        //     \"TXNode\": 2,\n        //     \"TXPort\": 0,\n        //     \"stateTX\": 0\n        // },\n        // {\n        //     \"RXNode\": 14771609,\n        //     \"RXPort\": 3,\n        //     \"stateRX\": \"0\",\n        //     \"TXNode\": 2,\n        //     \"TXPort\": 0,\n        //     \"stateTX\": 0\n        // },\n        // {\n        //     \"RXNode\": 14771609,\n        //     \"RXPort\": 4,\n        //     \"stateRX\": \"0\",\n        //     \"TXNode\": 2,\n        //     \"TXPort\": 0,\n        //     \"stateTX\": 0\n        // },\n        // {\n        //     \"RXNode\": 14771609,\n        //     \"RXPort\": 5,\n        //     \"stateRX\": \"0\",\n        //     \"TXNode\": 2,\n        //     \"TXPort\": 0,\n        //     \"stateTX\": 0\n        // },\n        // {\n        //     \"RXNode\": 14771609,\n        //     \"RXPort\": 6,\n        //     \"stateRX\": \"0\",\n        //     \"TXNode\": 2,\n        //     \"TXPort\": 0,\n        //     \"stateTX\": 0\n        // }\n    ],\n    \"gameState\": {\n        \"RXNode\": 14733772,\n        \"RXPort\": 3,\n        \"stateRX\": \"0\",\n        \"TXNode\": 14769654,\n        \"TXPort\": 1,\n        \"stateTX\": 0,\n        \"state\": \"state_idle\"\n    },\n    \"alarm\": {\n        \"TXNode\": 14493860,\n        \"TXPort\": 0,\n        \"stateTX\": 0,\n    },\n    \"endButton\": {\n        \"RXNode\": 3,\n        \"RXPort\": 6,\n        \"stateRX\": \"0\",\n        \"TXNode\": 2,\n        \"TXPort\": 0,\n        \"stateTX\": 0,\n        \"gameState\": \"state_idle\"\n    }\n}\n\nflow.set(\"mazeState\", _stateTemplate);\n\nvar state = flow.get(\"mazeState\");\nif (state === undefined) //test exists\n{\n    msg.payload = false;\n    msg.contextData = \"ERROR setting context data\";\n}else{\n    msg.payload = true;\n    msg.contextData = state;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 80,
        "wires": [
            [
                "a2e6ae904e37f0bb"
            ]
        ]
    },
    {
        "id": "a2e6ae904e37f0bb",
        "type": "debug",
        "z": "1007930ba5f8f5d0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 80,
        "wires": []
    },
    {
        "id": "fc27825f7ded3de2",
        "type": "function",
        "z": "1007930ba5f8f5d0",
        "name": "Set all TX",
        "func": "const ON = \"1\";\nconst OFF = \"0\";\n\nlet input = msg.payload;\n\nvar state = flow.get(\"mazeState\");\nif (state === undefined) //test exists\n{\n    msg.contextData = \"ERROR setting context data\";\n    return msg;\n}else{\n    // for (let i=0 ; i < state.gate.length ; i++){\n    //     state.gate[i].stateTX = state;\n    // }\n    \n    // MQTT settings\n    msg.qos = 0;\n    msg.retain = false;\n    \n    for (let i=0 ; i < state.gate.length ; i++) {\n        msg.topic = \"lasermaze/\" + state.gate[i].TXNode + \"/output/\" + state.gate[i].TXPort + \"/\";\n        state.gate[i].stateTX = input.toString();\n        msg.payload = state.gate[i].stateTX;\n        node.send(msg);\n    }\n    \n    flow.set(\"mazeState\", state);\n    msg.contextData = state;\n}\n\n    \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 220,
        "wires": [
            [
                "c81a9650759dabd2",
                "210bb4b30731e987"
            ]
        ]
    },
    {
        "id": "b2ae27903b53247d",
        "type": "inject",
        "z": "1007930ba5f8f5d0",
        "name": "All ON",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "str",
        "x": 350,
        "y": 160,
        "wires": [
            [
                "fc27825f7ded3de2"
            ]
        ]
    },
    {
        "id": "c81a9650759dabd2",
        "type": "debug",
        "z": "1007930ba5f8f5d0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 200,
        "wires": []
    },
    {
        "id": "210bb4b30731e987",
        "type": "link out",
        "z": "1007930ba5f8f5d0",
        "name": "To MQTT",
        "mode": "link",
        "links": [
            "3a55666fddd57745"
        ],
        "x": 755,
        "y": 240,
        "wires": []
    },
    {
        "id": "f7a1d63f84284acc",
        "type": "ui_button",
        "z": "1007930ba5f8f5d0",
        "name": "All ON",
        "group": "bab506bef351856a",
        "order": 1,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "All ON",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 350,
        "y": 240,
        "wires": [
            [
                "fc27825f7ded3de2"
            ]
        ]
    },
    {
        "id": "583c58508f50ccc5",
        "type": "ui_button",
        "z": "1007930ba5f8f5d0",
        "name": "All OFF",
        "group": "bab506bef351856a",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "All OFF",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "0",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 360,
        "y": 280,
        "wires": [
            [
                "fc27825f7ded3de2"
            ]
        ]
    },
    {
        "id": "d2088bf388403597",
        "type": "inject",
        "z": "1007930ba5f8f5d0",
        "name": "All OFF",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "str",
        "x": 350,
        "y": 200,
        "wires": [
            [
                "fc27825f7ded3de2"
            ]
        ]
    },
    {
        "id": "c14b66e0da959137",
        "type": "link in",
        "z": "1007930ba5f8f5d0",
        "name": "",
        "links": [
            "569bb307f1dce85b"
        ],
        "x": 215,
        "y": 400,
        "wires": [
            [
                "4e30df5f90534f7b"
            ]
        ]
    },
    {
        "id": "4e30df5f90534f7b",
        "type": "function",
        "z": "1007930ba5f8f5d0",
        "name": "Process input events",
        "func": "const ON = \"1\";\nconst OFF = \"0\";\n\nvar state = flow.get(\"mazeState\");\nif (state === undefined) //test exists\n{\n    msg.contextData = \"ERROR getting context data\";\n    return msg;\n}else{\n    msg.contextData = state;\n    \n    // MQTT settings\n    msg.qos = 0;\n    msg.retain = false;\n    \n    /*\n    \n    loop throught configured gates and see if input node is found\n    when found \n        see if associated TX node is on \n            when received state from input node is off give an ALARM\n        else\n            do nothing.\n    \n    */\n    \n    let mqttTopic = msg.topic;\n    let topics = mqttTopic.split('/');\n    let device = Number(topics[1]);\n    let port = Number(topics[3]);\n    \n    msg.debug = {};\n    msg.debug.topics = topics;\n    msg.debug.device = device;\n    msg.debug.port = port;\n    msg.debug.payload = msg.payload;\n    \n    \n    for (let i=0 ; i < state.gate.length ; i++) {\n        if((device === state.gate[i].RXNode) && \n           (port === state.gate[i].RXPort) && \n           (msg.payload !== state.gate[i].stateTX) &&\n           (state.gameState.state === \"state_armed\")){\n            // ALARM\n            msg.topic = \"lasermaze/\" + state.alarm.TXNode + \"/output/\" + state.alarm.TXPort + \"/\";\n            state.alarm.stateTX = ON;\n            msg.payload = state.alarm.stateTX;\n            // msg.payload = true;\n            flow.set(\"mazeState\", state);\n            node.send(msg);\n        }\n\n    }\n    \n   \n    // flow.set(\"mazeState\", state);\n    \n}\n\n    \n    \n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 400,
        "wires": [
            [
                "79e4f3ae43d7e057",
                "06f310fcd8475c86"
            ]
        ]
    },
    {
        "id": "cca1f98857b49745",
        "type": "function",
        "z": "1007930ba5f8f5d0",
        "name": "Process output events",
        "func": "const ON = \"1\";\nconst OFF = \"0\";\n\nvar state = flow.get(\"mazeState\");\nif (state === undefined) //test exists\n{\n    msg.contextData = \"ERROR getting context data\";\n    return msg;\n}else{\n    let mqttTopic = msg.topic;\n    let topics = mqttTopic.split('/');\n    let device = Number(topics[1]);\n    let port = Number(topics[3]);\n    \n    msg.debug = {};\n    msg.debug.topics = topics;\n    msg.debug.device = device;\n    msg.debug.port = port;\n    msg.debug.payload = msg.payload;\n    \n    \n    for (let i=0 ; i < state.gate.length ; i++) {\n        if((device === state.gate[i].TXNode) && (port === state.gate[i].TXPort)){\n            state.gate[i].stateTX = msg.payload;\n            // flow.set(\"mazeState\", state);\n            msg.contextData = state;\n            node.send(msg);\n        }\n    }\n    \n    if((device === state.gameState.RXNode) && (port === state.gameState.RXPort)){\n        state.gameState.stateRX = msg.payload;\n        // flow.set(\"mazeState\", state);\n        msg.contextData = state;\n        node.send(msg);\n    }\n    flow.set(\"mazeState\", state);\n    // msg.contextData = state;\n    // node.send(msg);\n}\n\n\n    \n    \n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 360,
        "wires": [
            [
                "63f160e754692197"
            ]
        ]
    },
    {
        "id": "63f160e754692197",
        "type": "debug",
        "z": "1007930ba5f8f5d0",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 360,
        "wires": []
    },
    {
        "id": "7982c6c542d663f9",
        "type": "link in",
        "z": "1007930ba5f8f5d0",
        "name": "",
        "links": [
            "45ddc3f75e2737b5"
        ],
        "x": 215,
        "y": 360,
        "wires": [
            [
                "cca1f98857b49745"
            ]
        ]
    },
    {
        "id": "b86725c4e8a7aaf4",
        "type": "ui_button",
        "z": "1007930ba5f8f5d0",
        "name": "ARMED",
        "group": "c489d944ca7cafd9",
        "order": 1,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "ARMED",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "className": "",
        "icon": "",
        "payload": "state_armed",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 580,
        "y": 540,
        "wires": [
            [
                "44b4e817621dc4eb"
            ]
        ]
    },
    {
        "id": "06d0710a42d8500f",
        "type": "ui_button",
        "z": "1007930ba5f8f5d0",
        "name": "SAFE",
        "group": "c489d944ca7cafd9",
        "order": 2,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "SAFE",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "",
        "payload": "state_safe",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 570,
        "y": 580,
        "wires": [
            [
                "44b4e817621dc4eb"
            ]
        ]
    },
    {
        "id": "160b60bbbffbab0f",
        "type": "inject",
        "z": "1007930ba5f8f5d0",
        "name": "sate_safe",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "state_safe",
        "payloadType": "str",
        "x": 560,
        "y": 660,
        "wires": [
            [
                "44b4e817621dc4eb"
            ]
        ]
    },
    {
        "id": "a58531692d11736f",
        "type": "inject",
        "z": "1007930ba5f8f5d0",
        "name": "sate_armed",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "state_armed",
        "payloadType": "str",
        "x": 570,
        "y": 700,
        "wires": [
            [
                "44b4e817621dc4eb"
            ]
        ]
    },
    {
        "id": "44b4e817621dc4eb",
        "type": "function",
        "z": "1007930ba5f8f5d0",
        "name": "Set game state",
        "func": "const ON = \"1\";\nconst OFF = \"0\";\n\nvar state = flow.get(\"mazeState\");\nif (state === undefined) //test exists\n{\n    msg.contextData = \"ERROR getting context data\";\n    return msg;\n}else{\n    \n    state.gameState.state = msg.payload;\n    \n    /// MQTT settings\n    msg.qos = 0;\n    msg.retain = false;\n    msg.topic = \"lasermaze/\" + state.gameState.TXNode + \"/output/\" + state.gameState.TXPort + \"/\";\n    \n    if(msg.payload === \"state_safe\"){\n        state.gameState.stateTX = OFF;\n    }else if(msg.payload === \"state_armed\"){\n        state.gameState.stateTX = ON;\n    }\n    msg.payload = state.gameState.stateTX;\n    \n    flow.set(\"mazeState\", state);\n    msg.contextData = state;\n    node.send(msg);\n}\n\n\n    \n    \n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 600,
        "wires": [
            [
                "e9bfb897dcbc2115"
            ]
        ]
    },
    {
        "id": "4c7c9903e1bd03c4",
        "type": "function",
        "z": "1007930ba5f8f5d0",
        "name": "",
        "func": "var msgArmed = {};\nvar msgSafe = {};\n\nvar state = flow.get(\"mazeState\");\nif (state === undefined) //test exists\n{\n    msg.contextData = \"ERROR getting context data\";\n    return msg;\n}else{\n\n    msg.contextData = state;\n    \n    if(state.gameState.state === \"state_safe\"){\n        // disable off button\n        msgSafe.enabled = false;\n        msgArmed.enabled = true;\n    }else if(state.gameState.state === \"state_armed\"){\n        // disable on button\n        msgSafe.enabled = true;\n        msgArmed.enabled = false;\n    }\n    node.send([[msgArmed],[msgSafe]]);\n\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 560,
        "wires": [
            [
                "b86725c4e8a7aaf4"
            ],
            [
                "06d0710a42d8500f"
            ]
        ]
    },
    {
        "id": "ed3a74366920558a",
        "type": "complete",
        "z": "1007930ba5f8f5d0",
        "name": "",
        "scope": [
            "44b4e817621dc4eb"
        ],
        "uncaught": false,
        "x": 270,
        "y": 560,
        "wires": [
            [
                "4c7c9903e1bd03c4"
            ]
        ]
    },
    {
        "id": "79e4f3ae43d7e057",
        "type": "link out",
        "z": "1007930ba5f8f5d0",
        "name": "",
        "mode": "link",
        "links": [
            "3a55666fddd57745"
        ],
        "x": 895,
        "y": 400,
        "wires": []
    },
    {
        "id": "06f310fcd8475c86",
        "type": "delay",
        "z": "1007930ba5f8f5d0",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 560,
        "y": 440,
        "wires": [
            [
                "ab710b635420a906"
            ]
        ]
    },
    {
        "id": "ab710b635420a906",
        "type": "function",
        "z": "1007930ba5f8f5d0",
        "name": "Switch off Alarm horn",
        "func": "const ON = \"1\";\nconst OFF = \"0\";\n\nvar state = flow.get(\"mazeState\");\nif (state === undefined) //test exists\n{\n    msg.contextData = \"ERROR getting context data\";\n    return msg;\n}else{\n    msg.contextData = state;\n    \n    // MQTT settings\n    msg.qos = 0;\n    msg.retain = false;\n    \n    let mqttTopic = msg.topic;\n    let topics = mqttTopic.split('/');\n    let device = Number(topics[1]);\n    let port = Number(topics[3]);\n    \n    msg.debug = {};\n    msg.debug.topics = topics;\n    msg.debug.device = device;\n    msg.debug.port = port;\n    msg.debug.payload = msg.payload;\n\n    msg.topic = \"lasermaze/\" + state.alarm.TXNode + \"/output/\" + state.alarm.TXPort + \"/\";\n    state.alarm.stateTX = OFF;\n    msg.payload = state.alarm.stateTX;\n    // msg.payload = true;\n    flow.set(\"mazeState\", state);\n    node.send(msg);\n}\n\n    \n    \n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 440,
        "wires": [
            [
                "79e4f3ae43d7e057"
            ]
        ]
    },
    {
        "id": "dee4c8a2fc5bcfa4",
        "type": "link in",
        "z": "1007930ba5f8f5d0",
        "name": "",
        "links": [
            "569bb307f1dce85b"
        ],
        "x": 375,
        "y": 620,
        "wires": [
            [
                "03d6addd92d8b97c"
            ]
        ]
    },
    {
        "id": "03d6addd92d8b97c",
        "type": "function",
        "z": "1007930ba5f8f5d0",
        "name": "Process input events",
        "func": "const ON = \"1\";\nconst OFF = \"0\";\n\nvar state = flow.get(\"mazeState\");\nif (state === undefined) //test exists\n{\n    msg.contextData = \"ERROR getting context data\";\n    return msg;\n}else{\n    msg.contextData = state;\n    \n    let mqttTopic = msg.topic;\n    let topics = mqttTopic.split('/');\n    let device = Number(topics[1]);\n    let port = Number(topics[3]);\n    \n    msg.debug = {};\n    msg.debug.topics = topics;\n    msg.debug.device = device;\n    msg.debug.port = port;\n    msg.debug.payload = msg.payload;\n\n    if((device === state.gameState.RXNode) && (port === state.gameState.RXPort)){\n        if(msg.payload === ON){\n            msg.payload = \"state_armed\";\n        }else if(msg.payload === OFF){\n            msg.payload = \"state_safe\";\n        }\n        node.send(msg);\n    }\n    // flow.set(\"mazeState\", state);\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 620,
        "wires": [
            [
                "44b4e817621dc4eb"
            ]
        ]
    },
    {
        "id": "e9bfb897dcbc2115",
        "type": "link out",
        "z": "1007930ba5f8f5d0",
        "name": "",
        "mode": "link",
        "links": [
            "3a55666fddd57745"
        ],
        "x": 915,
        "y": 600,
        "wires": []
    }
]